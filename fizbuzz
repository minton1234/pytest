作る前に使う.利用者目線で設計を進める。
コードの作りやすさと使いやすさは一致するとは限らない。(後から判明するより、使ってから作る方が良い)

TDDnのサイクル

1. 次の目標を考える
2. その目標を示すテストを書く
3. そのテストを実行して失敗させる (Red)
4. 目的のコードを書く
5. 2.で書いたテストを成功させる (Green)
6. テストが通るまでリファクタリングを行う (Refactoring)

準備、実行、検証　3A

検証 (ゴール)から始める.

coplleエラーはredに含める。

FizBuzz fizbuzz()
actual = fizbuzz.convert(1)


class FizBuzz():
  def __init__():
    pass
  def convert():
    pass
  
